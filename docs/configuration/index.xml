<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration on Git Changes validation</title><link>https://rusinikita.github.io/changes/docs/configuration/</link><description>Recent content in Configuration on Git Changes validation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Nov 2023 21:16:54 +0200</lastBuildDate><atom:link href="https://rusinikita.github.io/changes/docs/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>Commit</title><link>https://rusinikita.github.io/changes/docs/configuration/commit/</link><pubDate>Sat, 27 Jan 2024 18:34:45 +0800</pubDate><guid>https://rusinikita.github.io/changes/docs/configuration/commit/</guid><description>Commit messages validation configuration.
info Optional linkchanges check uses conventional commit by default.
Empty changes.yaml or no file - valid.
commit: # Commit message format for subject validation subject: &amp;#39;(issue): (type)? (title)&amp;#39; # values extracted from commit message values: issue: regexp: ^TEAM-\d&amp;#43;$ Subject format linkcommit.subject - simplified regexp for subject validation.
Examples link (!)?(type)((context))?: (title) - conventional commit with optional context and ! !feat: something fix(ci): something (issue): (title) - simple Jira/Basecamp/GitHub issue, : and title CMD-123: something #123: something (issue): (type)?</description></item><item><title>Functions</title><link>https://rusinikita.github.io/changes/docs/configuration/functions/</link><pubDate>Tue, 30 Jan 2024 00:15:10 +0700</pubDate><guid>https://rusinikita.github.io/changes/docs/configuration/functions/</guid><description>One stop page for check-function writing.
Examples linkUse separate PRs for fixes and features. Function checks parsed commit types.
commits.exists(c, c.type == &amp;#34;fix&amp;#34;) &amp;amp;&amp;amp; commits.exists(c, c.type == &amp;#34;feat&amp;#34;) Page contains draft flag and not shown. Function checks changed files and its content.
changes.filter(c, c.path.endsWith(&amp;#34;.md&amp;#34;) &amp;amp;&amp;amp; c.chunks.exists(ch, ch.content.contains(&amp;#34;draft:&amp;#34;)) ) Too big file change, more than 250 added lines. Using change stats.
changes.filter(change, change.path.endsWith(&amp;#34;.go&amp;#34;) &amp;amp;&amp;amp; change.stats().additions &amp;gt; 250) Commit author email.
commits.filter(commit, !</description></item><item><title>Changelog</title><link>https://rusinikita.github.io/changes/docs/configuration/changelog/</link><pubDate>Sat, 27 Jan 2024 20:19:01 +0800</pubDate><guid>https://rusinikita.github.io/changes/docs/configuration/changelog/</guid><description> warning Sorry, changelog generation in development. Please, vote for solution.</description></item></channel></rss>