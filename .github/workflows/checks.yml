name: project checks
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.55.2
          only-new-issues: true
          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"

      - name: vale
        uses: errata-ai/vale-action@reviewdog
        with:
          reporter: github-pr-check
          fail_on_error: true
          files: docs/content/docs
          filter_mode: added

  git-check:
    name: git-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # skip merge commit
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: git-changes_check
        run: |
          go run cmd/changes/* check --output=git-check.md

      - name: comment PR
        if: always()
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: git-check.md
          comment_tag: git-check
          mode: recreate
          create_if_not_exists: true

  tests:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test ./... -coverprofile=coverage.out

      - name: octocov-coverage-gateway
        uses: k1LoW/octocov-action@v0

  mutation-tests:
    name: mutation-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/*.go
      - uses: actions/setup-go@v4
        if: env.GIT_DIFF_FILTERED
        with:
          go-version: '1.21'
      - name: gramlins-mutation-testing
        uses: go-gremlins/gremlins-action@v1
        if: env.GIT_DIFF_FILTERED
        with:
          version: 'v0.5.0'
          args: ""
          workdir: .
